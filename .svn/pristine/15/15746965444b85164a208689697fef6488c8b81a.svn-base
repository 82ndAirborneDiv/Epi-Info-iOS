//
//  ImportCSV.m
//  EpiInfo
//
//  Created by John Copeland on 8/1/14.
//  Copyright (c) 2014 John Copeland. All rights reserved.
//

#import "ImportCSV.h"

@implementation ImportCSV
@synthesize url = _url;
@synthesize rootViewController = _rootViewController;
@synthesize fakeNavBar = _fakeNavBar;

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
    }
    return self;
}

- (id)initWithFrame:(CGRect)frame AndURL:(NSURL *)url
{
    self = [self initWithFrame:frame];
    
    if (self)
    {
        [self setUrl:url];
        
        dataText = @"";
        formName = @"";
        contentSizeHeight = 4.0;
        
        hasAFirstResponder = NO;
        
        formCanvas = [[UIView alloc] initWithFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];
        [formCanvas setBackgroundColor:[UIColor colorWithRed:59/255.0 green:106/255.0 blue:173/255.0 alpha:1.0]];
        
        [self addSubview:formCanvas];
        [self setScrollEnabled:YES];
        
        ado = [[AnalysisDataObject alloc] initWithCSVFile:url.path];
        [[NSFileManager defaultManager] removeItemAtPath:url.path error:nil];
        
        if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
        {
            [self setContentSize:CGSizeMake(320, 500)];
            
            EpiInfoUILabel *datasetNameLabel = [[EpiInfoUILabel alloc] initWithFrame:CGRectMake(6, contentSizeHeight, 113, 40)];
            [datasetNameLabel setFont:[UIFont fontWithName:@"HelveticaNeue-Bold" size:16.0]];
            [datasetNameLabel setTextAlignment:NSTextAlignmentLeft];
            [datasetNameLabel setText:@"Dataset Name:"];
            [datasetNameLabel setTextColor:[UIColor whiteColor]];
            [formCanvas addSubview:datasetNameLabel];
            EpiInfoTextField *datasetName = [[EpiInfoTextField alloc] initWithFrame:CGRectMake(129, contentSizeHeight, 185, 40)];
            [datasetName setBorderStyle:UITextBorderStyleRoundedRect];
            [datasetName setDelegate:self];
            [datasetName setReturnKeyType:UIReturnKeyDone];
            // Get the file name from the NSURL
            [datasetName setText:[url.lastPathComponent substringToIndex:[url.lastPathComponent rangeOfString:@"." options:NSBackwardsSearch].location]];
            [formCanvas addSubview:datasetName];
            contentSizeHeight += 50.0;
            
            EpiInfoUILabel *columnNameHeader = [[EpiInfoUILabel alloc] initWithFrame:CGRectMake(10, contentSizeHeight, 150, 40)];
            [columnNameHeader setFont:[UIFont fontWithName:@"HelveticaNeue-Bold" size:16.0]];
            [columnNameHeader setTextAlignment:NSTextAlignmentCenter];
            [columnNameHeader setText:@"Variable"];
            [columnNameHeader setTextColor:[UIColor whiteColor]];
            [formCanvas addSubview:columnNameHeader];
            EpiInfoUILabel *variableTypeHeader = [[EpiInfoUILabel alloc] initWithFrame:CGRectMake(160, contentSizeHeight, 75, 40)];
            [variableTypeHeader setFont:[UIFont fontWithName:@"HelveticaNeue-Bold" size:16.0]];
            [variableTypeHeader setTextAlignment:NSTextAlignmentCenter];
            [variableTypeHeader setText:@"Type"];
            [variableTypeHeader setTextColor:[UIColor whiteColor]];
            [formCanvas addSubview:variableTypeHeader];
            EpiInfoUILabel *binaryHeader = [[EpiInfoUILabel alloc] initWithFrame:CGRectMake(235, contentSizeHeight, 75, 40)];
            [binaryHeader setFont:[UIFont fontWithName:@"HelveticaNeue-Bold" size:16.0]];
            [binaryHeader setTextAlignment:NSTextAlignmentCenter];
            [binaryHeader setText:@"Binary"];
            [binaryHeader setTextColor:[UIColor whiteColor]];
            [formCanvas addSubview:binaryHeader];
            contentSizeHeight += 40;
            
            NSArray *variableNamesArray = [ado.columnNames keysSortedByValueUsingComparator:^(NSNumber *num1, NSNumber *num2) {
               if ([num1 intValue] > [num2 intValue])
                   return (NSComparisonResult)NSOrderedDescending;
                if ([num1 intValue] < [num2 intValue])
                    return (NSComparisonResult)NSOrderedAscending;
                return (NSComparisonResult)NSOrderedSame;
            }];
            for (int i = 0; i < variableNamesArray.count; i++)
            {
                EpiInfoTextField *variableNameField = [[EpiInfoTextField alloc] initWithFrame:CGRectMake(11, contentSizeHeight, 148, 40)];
                [variableNameField setBorderStyle:UITextBorderStyleNone];
                [variableNameField setBackgroundColor:[UIColor whiteColor]];
                [variableNameField.layer setCornerRadius:4.0];
                [variableNameField setDelegate:self];
                [variableNameField setReturnKeyType:UIReturnKeyDone];
                [variableNameField setText:[[[variableNamesArray objectAtIndex:i] stringByReplacingOccurrencesOfString:[NSString stringWithFormat:@"%c", 0x0d] withString:@""] stringByReplacingOccurrencesOfString:@" " withString:@""]];
                if (i == 0)
                {
                    UIView *white0 = [[UIView alloc] initWithFrame:CGRectMake(variableNameField.frame.origin.x + 10, contentSizeHeight, variableNameField.frame.size.width - 10, 40)];
                    UIView *white1 = [[UIView alloc] initWithFrame:CGRectMake(variableNameField.frame.origin.x, contentSizeHeight + 20, 20, 20)];
                    [white0 setBackgroundColor:[UIColor whiteColor]];
                    [white1 setBackgroundColor:[UIColor whiteColor]];
                    [formCanvas addSubview:white0];
                    [formCanvas addSubview:white1];
                }
                else if (i == variableNamesArray.count - 1)
                {
                    UIView *white0 = [[UIView alloc] initWithFrame:CGRectMake(variableNameField.frame.origin.x + 10, contentSizeHeight, variableNameField.frame.size.width - 10, 40)];
                    UIView *white1 = [[UIView alloc] initWithFrame:CGRectMake(variableNameField.frame.origin.x, contentSizeHeight, 20, 20)];
                    [white0 setBackgroundColor:[UIColor whiteColor]];
                    [white1 setBackgroundColor:[UIColor whiteColor]];
                    [formCanvas addSubview:white0];
                    [formCanvas addSubview:white1];
                }
                else
                {
                    UIView *white0 = [[UIView alloc] initWithFrame:variableNameField.frame];
                    [white0 setBackgroundColor:[UIColor whiteColor]];
                    [formCanvas addSubview:white0];
                }
                [formCanvas addSubview:variableNameField];
                
                EpiInfoUILabel *variableTypeField = [[EpiInfoUILabel alloc] initWithFrame:CGRectMake(161, contentSizeHeight, 73, 40)];
                [variableTypeField setBackgroundColor:[UIColor whiteColor]];
                [variableTypeField setFont:[UIFont fontWithName:@"HelveticaNeue" size:16.0]];
                [variableTypeField setTextColor:[UIColor blackColor]];
                [variableTypeField setTextAlignment:NSTextAlignmentCenter];
                int typeNumber = [(NSNumber *)[ado.dataTypes objectForKey:[NSString stringWithFormat:@"%d", i]] intValue];
                if (typeNumber < 2)
                    [variableTypeField setText:@"Num"];
                else
                    [variableTypeField setText:@"String"];
                [formCanvas addSubview:variableTypeField];
                
                EpiInfoUILabel *isBinaryField = [[EpiInfoUILabel alloc] initWithFrame:CGRectMake(236, contentSizeHeight, 73, 40)];
                [isBinaryField setBackgroundColor:[UIColor whiteColor]];
                [isBinaryField setFont:[UIFont fontWithName:@"HelveticaNeue" size:16.0]];
                [isBinaryField setTextColor:[UIColor blackColor]];
                [isBinaryField setTextAlignment:NSTextAlignmentCenter];
                [isBinaryField.layer setCornerRadius:4.0];
                if (i == 0)
                {
                    UIView *white0 = [[UIView alloc] initWithFrame:CGRectMake(isBinaryField.frame.origin.x, contentSizeHeight, isBinaryField.frame.size.width - 10, 40)];
                    UIView *white1 = [[UIView alloc] initWithFrame:CGRectMake(isBinaryField.frame.origin.x, contentSizeHeight + 20, isBinaryField.frame.size.width, 20)];
                    [white0 setBackgroundColor:[UIColor whiteColor]];
                    [white1 setBackgroundColor:[UIColor whiteColor]];
                    [formCanvas addSubview:white0];
                    [formCanvas addSubview:white1];
                }
                else if (i == variableNamesArray.count - 1)
                {
                    UIView *white0 = [[UIView alloc] initWithFrame:CGRectMake(isBinaryField.frame.origin.x, contentSizeHeight, isBinaryField.frame.size.width - 10, 40)];
                    UIView *white1 = [[UIView alloc] initWithFrame:CGRectMake(isBinaryField.frame.origin.x, contentSizeHeight, isBinaryField.frame.size.width, 20)];
                    [white0 setBackgroundColor:[UIColor whiteColor]];
                    [white1 setBackgroundColor:[UIColor whiteColor]];
                    [formCanvas addSubview:white0];
                    [formCanvas addSubview:white1];
                }
                else
                {
                    UIView *white0 = [[UIView alloc] initWithFrame:isBinaryField.frame];
                    [white0 setBackgroundColor:[UIColor whiteColor]];
                    [formCanvas addSubview:white0];
                }
                [formCanvas addSubview:isBinaryField];

                contentSizeHeight += 42.0;
            }
            
            contentSizeHeight += 10;
            UIButton *saveButton = [[UIButton alloc] initWithFrame:CGRectMake(198, contentSizeHeight, 120, 40)];
            [saveButton setBackgroundColor:[UIColor colorWithRed:3/255.0 green:36/255.0 blue:77/255.0 alpha:1.0]];
            [saveButton.layer setCornerRadius:4.0];
            [saveButton setTitle:@"Save" forState:UIControlStateNormal];
            [saveButton setImage:[UIImage imageNamed:@"SaveButton.png"] forState:UIControlStateNormal];
            [saveButton.layer setMasksToBounds:YES];
            [saveButton.layer setCornerRadius:4.0];
            [saveButton addTarget:self action:@selector(saveTheForm) forControlEvents:UIControlEventTouchUpInside];
            [self addSubview:saveButton];
            UIButton *cancelButton = [[UIButton alloc] initWithFrame:CGRectMake(2, contentSizeHeight, 120, 40)];
            [cancelButton setBackgroundColor:[UIColor colorWithRed:3/255.0 green:36/255.0 blue:77/255.0 alpha:1.0]];
            [cancelButton.layer setCornerRadius:4.0];
            [cancelButton setTitle:@"Cancel" forState:UIControlStateNormal];
            [cancelButton setImage:[UIImage imageNamed:@"CancelButton.png"] forState:UIControlStateNormal];
            [cancelButton.layer setMasksToBounds:YES];
            [cancelButton.layer setCornerRadius:4.0];
            [cancelButton addTarget:self action:@selector(dismissForm) forControlEvents:UIControlEventTouchUpInside];
            [self addSubview:cancelButton];
            contentSizeHeight += 42.0;
            
            if (contentSizeHeight > 500)
            {
                [self setContentSize:CGSizeMake(frame.size.width, contentSizeHeight)];
                [formCanvas setFrame:CGRectMake(0, 0, frame.size.width, contentSizeHeight + 256)];
            }
        }
        else
        {
        }
        
//        EpiInfoUILabel *disclaimer = [[EpiInfoUILabel alloc] initWithFrame:CGRectMake(10, 10, 300, 100)];
//        [disclaimer setBackgroundColor:[UIColor blackColor]];
//        [disclaimer setTextColor:[UIColor whiteColor]];
//        [disclaimer setNumberOfLines:0];
//        [disclaimer setLineBreakMode:NSLineBreakByWordWrapping];
//        [disclaimer.layer setCornerRadius:4.0];
//        [disclaimer setFont:[UIFont fontWithName:@"HelveticaNeue-Bold" size:16.0]];
//        [disclaimer setText:@"This feature is still under development. Touch this message to dismiss the form and return to StatCalc."];
//        UIButton *dismissFormButton = [[UIButton alloc] initWithFrame:CGRectMake(10, 10, 300, 100)];
//        [dismissFormButton addTarget:self action:@selector(dismissForm) forControlEvents:UIControlEventTouchUpInside];
//        [dismissFormButton setBackgroundColor:[UIColor clearColor]];
        //        [self addSubview:disclaimer];
        //        [self addSubview:dismissFormButton];
        for (id key in ado.columnNames)
            NSLog(@"%@:  %@", key, [ado.columnNames objectForKey:key]);
        for (id key in ado.dataTypes)
            NSLog(@"%@:  %@", key, [ado.dataTypes objectForKey:key]);
        for (id key in ado.dataDefinitions)
            NSLog(@"%@:  %@", key, [ado.dataDefinitions objectForKey:key]);
        for (id array in ado.dataSet)
            NSLog(@"%@", [(NSArray *)array componentsJoinedByString:@", "]);
        NSLog(@"%f, %f", self.contentSize.width, self.contentSize.height);
    }
    
    return self;
}

- (id)initWithFrame:(CGRect)frame AndURL:(NSURL *)url AndRootViewController:(UIViewController *)rvc AndFakeNavBar:(EpiInfoUILabel *)fnb
{
    self = [self initWithFrame:frame AndURL:url];
    if (self)
    {
        [self setRootViewController:rvc];
        [self setFakeNavBar:fnb];
    }
    return self;
}

- (void)saveTheForm
{
    [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
        CATransform3D rotate = CATransform3DIdentity;
        rotate.m34 = 1.0 / -2000;
        rotate = CATransform3DRotate(rotate, M_PI * 0.5, 0.0, 1.0, 0.0);
        [self.rootViewController.view.layer setTransform:rotate];
    } completion:^(BOOL finished){
        saveFormView = [[SaveFormView alloc] initWithFrame:self.frame AndRootViewController:self.rootViewController AndFormView:self AndFormName:formName AndURL:self.url];
        [self.rootViewController.view addSubview:saveFormView];
        CATransform3D rotate = CATransform3DIdentity;
        rotate.m34 = 1.0 / -2000;
        rotate = CATransform3DRotate(rotate, M_PI * 1.5, 0.0, 1.0, 0.0);
        [self.rootViewController.view.layer setTransform:rotate];
        [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
            CATransform3D rotate = CATransform3DIdentity;
            rotate.m34 = 1.0 / -2000;
            rotate = CATransform3DRotate(rotate, M_PI * 0.0, 0.0, 1.0, 0.0);
            [self.rootViewController.view.layer setTransform:rotate];
        } completion:^(BOOL finished){
        }];
    }];
}

- (void)dismissForm;
{
    [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
        CATransform3D rotate = CATransform3DIdentity;
        rotate.m34 = 1.0 / -2000;
        rotate = CATransform3DRotate(rotate, M_PI * -0.5, 0.0, 1.0, 0.0);
        [self.rootViewController.view.layer setTransform:rotate];
    } completion:^(BOOL finished){
        [self removeFromSuperview];
        [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
            CATransform3D rotate = CATransform3DIdentity;
            rotate.m34 = 1.0 / -2000;
            rotate = CATransform3DRotate(rotate, M_PI * -1.0, 0.0, 1.0, 0.0);
            [self.rootViewController.view.layer setTransform:rotate];
        } completion:^(BOOL finished){
            [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
                CATransform3D rotate = CATransform3DIdentity;
                rotate.m34 = 1.0 / -2000;
                rotate = CATransform3DRotate(rotate, M_PI * -1.5, 0.0, 1.0, 0.0);
                [self.rootViewController.view.layer setTransform:rotate];
            } completion:^(BOOL finished){
                [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
                    CATransform3D rotate = CATransform3DIdentity;
                    rotate.m34 = 1.0 / -2000;
                    rotate = CATransform3DRotate(rotate, M_PI * 0.0, 0.0, 1.0, 0.0);
                    [self.rootViewController.view.layer setTransform:rotate];
                } completion:^(BOOL finished){
                }];
            }];
        }];
    }];
}

- (void)removeFromSuperview
{
    [self.fakeNavBar removeFromSuperview];
    [super removeFromSuperview];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
        [self setContentSize:CGSizeMake(self.contentSize.width, self.contentSize.height - 200.0)];
    } completion:^(BOOL finished){
        hasAFirstResponder = NO;
    }];
    return YES;
}
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    if (hasAFirstResponder)
        return YES;
    
    [self setContentSize:CGSizeMake(self.contentSize.width, self.contentSize.height + 200.0)];
    hasAFirstResponder = YES;
    
    return YES;
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end
