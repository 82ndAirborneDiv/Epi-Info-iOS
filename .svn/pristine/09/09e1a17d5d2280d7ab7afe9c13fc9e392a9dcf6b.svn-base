//
//  ImportCSV.m
//  EpiInfo
//
//  Created by John Copeland on 8/1/14.
//  Copyright (c) 2014 John Copeland. All rights reserved.
//

#import "ImportCSV.h"

@implementation ImportCSV
@synthesize url = _url;
@synthesize rootViewController = _rootViewController;
@synthesize fakeNavBar = _fakeNavBar;

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
    }
    return self;
}

- (id)initWithFrame:(CGRect)frame AndURL:(NSURL *)url
{
    self = [self initWithFrame:frame];
    
    if (self)
    {
        [self setUrl:url];
        
        dataText = @"";
        formName = @"";
        contentSizeHeight = 4.0;
        
        hasAFirstResponder = NO;
        
        formCanvas = [[UIView alloc] initWithFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];
        [formCanvas setBackgroundColor:[UIColor colorWithRed:59/255.0 green:106/255.0 blue:173/255.0 alpha:1.0]];
        
        [self addSubview:formCanvas];
        [self setScrollEnabled:YES];
        
        ado = [[AnalysisDataObject alloc] initWithCSVFile:url.path];
        [[NSFileManager defaultManager] removeItemAtPath:url.path error:nil];
        
        if (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
        {
            [self setContentSize:CGSizeMake(320, 548)];
            
            UILabel *datasetNameLabel = [[UILabel alloc] initWithFrame:CGRectMake(10, contentSizeHeight, 113, 40)];
            [datasetNameLabel setFont:[UIFont fontWithName:@"HelveticaNeue-Bold" size:16.0]];
            [datasetNameLabel setTextAlignment:NSTextAlignmentLeft];
            [datasetNameLabel setText:@"Dataset Name:"];
            [datasetNameLabel setTextColor:[UIColor whiteColor]];
            [formCanvas addSubview:datasetNameLabel];
            EpiInfoTextField *datasetName = [[EpiInfoTextField alloc] initWithFrame:CGRectMake(125, contentSizeHeight, 185, 40)];
            [datasetName setBorderStyle:UITextBorderStyleRoundedRect];
            [datasetName setDelegate:self];
            [datasetName setReturnKeyType:UIReturnKeyDone];
            [datasetName setText:[url.lastPathComponent substringToIndex:[url.lastPathComponent rangeOfString:@"." options:NSBackwardsSearch].location]];
            [formCanvas addSubview:datasetName];
            
            contentSizeHeight += 50.0;
            
            UIButton *saveButton = [[UIButton alloc] initWithFrame:CGRectMake(198, contentSizeHeight, 120, 40)];
            [saveButton setBackgroundColor:[UIColor colorWithRed:3/255.0 green:36/255.0 blue:77/255.0 alpha:1.0]];
            [saveButton.layer setCornerRadius:4.0];
            [saveButton setTitle:@"Save" forState:UIControlStateNormal];
            [saveButton setImage:[UIImage imageNamed:@"SaveButton.png"] forState:UIControlStateNormal];
            [saveButton.layer setMasksToBounds:YES];
            [saveButton.layer setCornerRadius:4.0];
            [saveButton addTarget:self action:@selector(saveTheForm) forControlEvents:UIControlEventTouchUpInside];
            [self addSubview:saveButton];
            UIButton *cancelButton = [[UIButton alloc] initWithFrame:CGRectMake(2, contentSizeHeight, 120, 40)];
            [cancelButton setBackgroundColor:[UIColor colorWithRed:3/255.0 green:36/255.0 blue:77/255.0 alpha:1.0]];
            [cancelButton.layer setCornerRadius:4.0];
            [cancelButton setTitle:@"Cancel" forState:UIControlStateNormal];
            [cancelButton setImage:[UIImage imageNamed:@"CancelButton.png"] forState:UIControlStateNormal];
            [cancelButton.layer setMasksToBounds:YES];
            [cancelButton.layer setCornerRadius:4.0];
            [cancelButton addTarget:self action:@selector(dismissForm) forControlEvents:UIControlEventTouchUpInside];
            [self addSubview:cancelButton];
            contentSizeHeight += 42.0;
            
            if (contentSizeHeight > 548)
            {
                [self setContentSize:CGSizeMake(frame.size.width, contentSizeHeight)];
                [formCanvas setFrame:CGRectMake(0, 0, frame.size.width, contentSizeHeight)];
            }
        }
        else
        {
        }
        
//        UILabel *disclaimer = [[UILabel alloc] initWithFrame:CGRectMake(10, 10, 300, 100)];
//        [disclaimer setBackgroundColor:[UIColor blackColor]];
//        [disclaimer setTextColor:[UIColor whiteColor]];
//        [disclaimer setNumberOfLines:0];
//        [disclaimer setLineBreakMode:NSLineBreakByWordWrapping];
//        [disclaimer.layer setCornerRadius:4.0];
//        [disclaimer setFont:[UIFont fontWithName:@"HelveticaNeue-Bold" size:16.0]];
//        [disclaimer setText:@"This feature is still under development. Touch this message to dismiss the form and return to StatCalc."];
//        UIButton *dismissFormButton = [[UIButton alloc] initWithFrame:CGRectMake(10, 10, 300, 100)];
//        [dismissFormButton addTarget:self action:@selector(dismissForm) forControlEvents:UIControlEventTouchUpInside];
//        [dismissFormButton setBackgroundColor:[UIColor clearColor]];
        //        [self addSubview:disclaimer];
        //        [self addSubview:dismissFormButton];
        for (id key in ado.columnNames)
            NSLog(@"%@:  %@", key, [ado.columnNames objectForKey:key]);
        for (id key in ado.dataTypes)
            NSLog(@"%@:  %@", key, [ado.dataTypes objectForKey:key]);
        for (id array in ado.dataSet)
            NSLog(@"%@", [(NSArray *)array componentsJoinedByString:@", "]);
        NSLog(@"%@", [url.lastPathComponent substringToIndex:[url.lastPathComponent rangeOfString:@"." options:NSBackwardsSearch].location]);
    }
    
    return self;
}

- (id)initWithFrame:(CGRect)frame AndURL:(NSURL *)url AndRootViewController:(UIViewController *)rvc AndFakeNavBar:(UILabel *)fnb
{
    self = [self initWithFrame:frame AndURL:url];
    if (self)
    {
        [self setRootViewController:rvc];
        [self setFakeNavBar:fnb];
    }
    return self;
}

- (void)saveTheForm
{
    [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
        CATransform3D rotate = CATransform3DIdentity;
        rotate.m34 = 1.0 / -2000;
        rotate = CATransform3DRotate(rotate, M_PI * 0.5, 0.0, 1.0, 0.0);
        [self.rootViewController.view.layer setTransform:rotate];
    } completion:^(BOOL finished){
        saveFormView = [[SaveFormView alloc] initWithFrame:self.frame AndRootViewController:self.rootViewController AndFormView:self AndFormName:formName AndURL:self.url];
        [self.rootViewController.view addSubview:saveFormView];
        CATransform3D rotate = CATransform3DIdentity;
        rotate.m34 = 1.0 / -2000;
        rotate = CATransform3DRotate(rotate, M_PI * 1.5, 0.0, 1.0, 0.0);
        [self.rootViewController.view.layer setTransform:rotate];
        [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
            CATransform3D rotate = CATransform3DIdentity;
            rotate.m34 = 1.0 / -2000;
            rotate = CATransform3DRotate(rotate, M_PI * 0.0, 0.0, 1.0, 0.0);
            [self.rootViewController.view.layer setTransform:rotate];
        } completion:^(BOOL finished){
        }];
    }];
}

- (void)dismissForm;
{
    [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
        CATransform3D rotate = CATransform3DIdentity;
        rotate.m34 = 1.0 / -2000;
        rotate = CATransform3DRotate(rotate, M_PI * -0.5, 0.0, 1.0, 0.0);
        [self.rootViewController.view.layer setTransform:rotate];
    } completion:^(BOOL finished){
        [self removeFromSuperview];
        [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
            CATransform3D rotate = CATransform3DIdentity;
            rotate.m34 = 1.0 / -2000;
            rotate = CATransform3DRotate(rotate, M_PI * -1.0, 0.0, 1.0, 0.0);
            [self.rootViewController.view.layer setTransform:rotate];
        } completion:^(BOOL finished){
            [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
                CATransform3D rotate = CATransform3DIdentity;
                rotate.m34 = 1.0 / -2000;
                rotate = CATransform3DRotate(rotate, M_PI * -1.5, 0.0, 1.0, 0.0);
                [self.rootViewController.view.layer setTransform:rotate];
            } completion:^(BOOL finished){
                [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
                    CATransform3D rotate = CATransform3DIdentity;
                    rotate.m34 = 1.0 / -2000;
                    rotate = CATransform3DRotate(rotate, M_PI * 0.0, 0.0, 1.0, 0.0);
                    [self.rootViewController.view.layer setTransform:rotate];
                } completion:^(BOOL finished){
                }];
            }];
        }];
    }];
}

- (void)removeFromSuperview
{
    [self.fakeNavBar removeFromSuperview];
    [super removeFromSuperview];
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    [UIView animateWithDuration:0.3 delay:0.0 options:UIViewAnimationOptionCurveLinear animations:^{
        [self setContentSize:CGSizeMake(self.contentSize.width, self.contentSize.height - 200.0)];
    } completion:^(BOOL finished){
        hasAFirstResponder = NO;
    }];
    return YES;
}
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    if (hasAFirstResponder)
        return YES;
    
    [self setContentSize:CGSizeMake(self.contentSize.width, self.contentSize.height + 200.0)];
    hasAFirstResponder = YES;
    
    return YES;
}

/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/

@end
