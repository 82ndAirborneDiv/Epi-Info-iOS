//
//  CohortSimulationView.swift
//  EpiInfo
//
//  Created by John Copeland on 3/5/15.
//  Copyright (c) 2015 John Copeland. All rights reserved.
//

import UIKit

class CohortSimulationsView: UIView, UITextFieldDelegate {

    var fadingColorView = UIImageView()
    var resignAllButton = UIButton()
    var exposed = NumberField()
    var maxWidth = CGFloat()
    var maxHeight = CGFloat()

    override init() {
        super.init()
    }
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        if (frame.height == 0.0)
        {
            return
        }

        self.clipsToBounds = true
        maxHeight = frame.height
        maxWidth = frame.width
        
        if (UIDevice.currentDevice().userInterfaceIdiom == .Pad)
        {
        }
        else
        {
            // Add background image
            fadingColorView = UIImageView(frame: frame)
            let frameHeight: Float = Float(frame.size.height)
            if (frameHeight > 500)
            {
                fadingColorView.image = UIImage(named: "iPhone5Background.png")
            }
            else
            {
                fadingColorView.image = UIImage(named: "iPhone4Background.png")
            }
            self.addSubview(fadingColorView)
            self.sendSubviewToBack(fadingColorView)
            
            //Add the screen-sized clear button to dismiss all keyboards
            resignAllButton = UIButton(frame: frame)
            resignAllButton.backgroundColor = .clearColor()
            resignAllButton.addTarget(self, action: "resignAll", forControlEvents: .TouchUpInside)
            self.addSubview(resignAllButton)
            
            //Add the NumberField for number of exposed
            exposed = NumberField(frame: CGRectMake(20 * (frame.width / maxWidth), 40 * (frame.height / maxHeight), 80 * (frame.width / maxWidth), 40 * (frame.height / maxHeight)))
            exposed.borderStyle = .RoundedRect
            exposed.keyboardType = .NumberPad
            exposed.delegate = self
            exposed.returnKeyType = .Done
            self.addSubview(exposed)
        }
    }
    
    func changeFrame(frame: CGRect) {
        self.frame = frame
        fadingColorView.frame = CGRectMake(0, 0, frame.width, frame.height)
        resignAllButton.frame = fadingColorView.frame
        exposed.frame = CGRectMake(20 * (frame.width / maxWidth), 40 * (frame.height / maxHeight), 80 * (frame.width / maxWidth), 40 * (frame.height / maxHeight))
    }
    
    func textFieldShouldReturn(textField: UITextField) -> Bool {
        return textField.resignFirstResponder()
    }
    
    func resignAll() {
        for v in self.subviews as [UIView]
        {
            if let tf = v as? UITextField
            {
                if (tf.isFirstResponder())
                {
                    tf.resignFirstResponder()
                }
            }
        }
    }
    
    required init(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}